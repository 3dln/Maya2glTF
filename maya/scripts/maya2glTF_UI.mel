global string $maya2glTF_global_export_dir;

proc string _quoted(string $text)
{
	string $quote = "\"";
	return $quote+$text+$quote;
}

proc string _terminateWithSlash(string $folder)
{
	return $folder + (endsWith($folder,"/") ? "" : "/");
}

global proc maya2glTF_polySelectAndFrame() 
{
    select -r `ls -v -type mesh -ap`;
    viewFit -an 1;
}

global proc maya2glTF_onExport
( string $copyrightFLD
, string $folderFLD
, string $sceneNameFLD
, string $scaleFLD
, string $flagsFLD
, string $animFLD
, string $charFLD
)
{
    // This is defined on maya startup
	global string $gMainProgressBar;  

	// Workaround a maya bug: progress is cancelled twice
	progressBar -edit
		-beginProgress
		-isInterruptable true
		-status "maya2glTF: preparing for export..."
		-minValue 0
		-maxValue 1
		$gMainProgressBar;

	while(`progressBar -query -isCancelled $gMainProgressBar`) 
	{
		print ("maya2glTF: aborting previous export...\n");
		progressBar -edit -endProgress $gMainProgressBar;
	}

	progressBar -edit -endProgress $gMainProgressBar;

    string $copyright = `textFieldGrp -q -fileName $copyrightFLD`; 
	string $folder = `textFieldGrp -q -fileName $folderFLD`;
	$folder = _terminateWithSlash($folder);
	string $sceneName = `textFieldGrp -q -text $sceneNameFLD`;
	float $scale = `floatFieldGrp -q -value1 $scaleFLD`;
	string $flags = `textFieldGrp -q -text $flagsFLD`;
	int $anim = `optionMenuGrp -q -sl $animFLD`;
	int $char = `optionMenuGrp -q -v $charFLD`;

	print ("maya2glTF: loading plugin...\n");

	loadPlugin "maya2glTF";

	print ("maya2glTF: plugin loaded.\n");

	string $cmd = `format 
		-s(_quoted($sceneName)) 
		-s(_quoted($folder)) 
		-s($scale) 
		-s(_quoted($copyright)) 
		-s($flags)
		"maya2glTF -sn ^1s -of ^2s -sf ^3s -cpr ^4s ^5s;"
	`;

	print ($cmd+"\n");

	int $failed = catch(eval($cmd));

	int $aborted = `progressBar -query -isCancelled $gMainProgressBar`;

	if ($aborted) {
		print ("*** maya2glTF: aborted at "+`date -time`+" ***\n");
	} else if ($failed) {
		print ("!!! maya2glTF: failed at "+`date -time`+" !!!\n");
	} else {
		print ("+++ maya2glTF: completed at "+`date -time`+" +++\n");
	}

	unloadPlugin "maya2glTF";

	progressBar -edit -endProgress $gMainProgressBar;
}

global proc maya2glTF_exportProgressUI(int $max) {
    // This is defined on maya startup
	global string $gMainProgressBar;  

	$max = max(1, $max);

	progressBar -edit
		-beginProgress
		-isInterruptable true
		-status "maya2glTF: exporting..."
		-minValue 0
		-maxValue $max
		$gMainProgressBar;
}

// Returns -1 if abortion is requested
global proc int maya2glTF_advanceExportProgressUI(string $stepName) 
{
	global string $gMainProgressBar;  // This is defined on maya startup

    progressBar -edit -step 1 -status ("maya2glTF: " + $stepName + "...") $gMainProgressBar;

	if(`progressBar -query -isCancelled $gMainProgressBar`) {
		print ("maya2glTF: aborting at "+`date -time`+"\n");
        return -1;
	}

	return 0;
}

global proc maya2glTF_UI()
{
	global string $maya2glTF_global_export_dir;

    // This is defined on maya startup
	global string $gMainProgressBar;  

    // This is auto-updated by msbuild 
	string $maya2glTF_version = "v0.9.2-beta 58c18e7";

	if (`window -exists maya2glTF_exporter_window`)
		deleteUI maya2glTF_exporter_window;

    // Setup export directory
	string $exportDir = $maya2glTF_global_export_dir;
	
	if( $exportDir == "" )
	{
		string $scenePath = `file -q -loc`;
		string $sceneDir = dirname($scenePath);
		$exportDir = _terminateWithSlash($sceneDir)+"export/";
	}
	
	$exportDir = fromNativePath($exportDir);
	
	string $sceneName = basenameEx(`file -q -sceneName -shortName`);

    string $year = `date -format "YYYY"`;

	window -title ("maya2glTF") maya2glTF_exporter_window;

    frameLayout -mw 30 -mh 30 ("copyright (C)" + $year + " wondermedia.tv         version " + $maya2glTF_version);

	columnLayout -adjustableColumn true -rowSpacing 10; 

	string $copyright = "anonymous " + $year;

	float $scale = 1;

	button -label "assign PBR shader to selection" -command "maya2glTF_assignPbrShader();";

	separator;

	string $folderFLD = `textFieldGrp -fileName $exportDir -label "output folder:" -adjustableColumn 2`;
	string $copyrightFLD = `textFieldGrp -text $copyright -label "copyright:" -adjustableColumn 2`;
	string $sceneNameFLD = `textFieldGrp -text $sceneName -label "scene name:" -adjustableColumn 2`;
	string $scaleFLD = `floatFieldGrp -value1 1 -label "scale factor:"`;
	string $flagsFLD = `textFieldGrp -text "" -label "extra flags:" -adjustableColumn 2 `;

	string $animFLD = `optionMenuGrp -label "animation:" -adjustableColumn 2`;
		menuItem -label "none";
		menuItem -label "time slider";
		menuItem -label "range slider";
		menuItem -label "trax";	

	string $charFLD = `optionMenuGrp -label "character:" -enable 0 -adjustableColumn 2`;
	for ( $char in `ls -type character`)
		menuItem -label $char;

	string $animCMD = `format -s(_quoted($animFLD)) -s(_quoted($charFLD)) 
		"optionMenuGrp -edit -enable (`optionMenuGrp -q -sl ^1s` == 4) ^2s;"`;

	optionMenuGrp -edit -changeCommand $animCMD $animFLD;

	separator;

	string $exportCMD = `format 
		-s(_quoted($copyrightFLD)) 
		-s(_quoted($folderFLD)) 
		-s(_quoted($sceneNameFLD)) 
		-s(_quoted($scaleFLD))
		-s(_quoted($flagsFLD))
		-s(_quoted($animFLD))
		-s(_quoted($charFLD))
	 	"maya2glTF_onExport(^1s, ^2s, ^3s, ^4s, ^5s, ^6s, ^7s);"`;

	button -label "select all polygon meshes" -command "maya2glTF_polySelectAndFrame();";
	button -label "export selected meshes" -command $exportCMD;
	
	showWindow maya2glTF_exporter_window;
}

// test
