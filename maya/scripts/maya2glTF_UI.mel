global string $maya2glTF_global_export_dir;

 proc string _quoted(string $text)
{
	string $quote = "\"";
	return $quote+$text+$quote;
}

proc string _terminateWithSlash(string $folder)
{
	return $folder + (endsWith($folder,"/") ? "" : "/");
}

global proc maya2glTF_polySelectAndFrame() 
{
    select -r `ls -v -type mesh -ap`;
    viewFit -an 1;
}

global proc maya2glTF_onExport(
	string $copyrightFLD, 
	string $folderFLD, 
	string $sceneNameFLD, 
	string $scaleFLD)
{
    // This is defined on maya startup
	global string $gMainProgressBar;  

	// Workaround a maya bug: progress is cancelled twice
	progressBar -edit
		-beginProgress
		-isInterruptable true
		-status "maya2glTF: preparing for export..."
		-minValue 0
		-maxValue 1
		$gMainProgressBar;

	while(`progressBar -query -isCancelled $gMainProgressBar`) 
	{
		print ("maya2glTF: aborting previous export...\n");
		progressBar -edit -endProgress $gMainProgressBar;
	}

	progressBar -edit -endProgress $gMainProgressBar;

    string $copyright = `textFieldGrp -q -fileName $copyrightFLD`; 
	string $folder = `textFieldGrp -q -fileName $folderFLD`;
	$folder = _terminateWithSlash($folder);
	string $sceneName = `textFieldGrp -q -text $sceneNameFLD`;
	float $scale = `floatFieldGrp -q -value1 $scaleFLD`;

	print ("maya2glTF: loading plugin...");

	loadPlugin "maya2glTF";

	print ("maya2glTF: plugin loaded!");

	int $failed = catch(`maya2glTF -sn $sceneName -of $folder -sf $scale -cpr $copyright`);

	int $aborted = `progressBar -query -isCancelled $gMainProgressBar`;

	if ($aborted) {
		print ("*** maya2glTF: aborted at "+`date -time`+" ***\n");
	} else if ($failed) {
		print ("!!! maya2glTF: failed at "+`date -time`+" !!!\n");
	} else {
		print ("+++ maya2glTF: completed at "+`date -time`+" +++\n");
	}

	progressBar -edit -endProgress $gMainProgressBar;

	unloadPlugin "maya2glTF_MayaExporter.mll";
}

global proc maya2glTF_exportProgressUI(int $max) {
    // This is defined on maya startup
	global string $gMainProgressBar;  

	$max = max(1, $max);

	progressBar -edit
		-beginProgress
		-isInterruptable true
		-status "maya2glTF: exporting (press ESC to abort)..."
		-minValue 0
		-maxValue $max
		$gMainProgressBar;
}

// Returns -1 if abortion is requested
global proc int maya2glTF_advanceExportProgressUI() 
{
	global string $gMainProgressBar;  // This is defined on maya startup

    progressBar -edit -step 1 $gMainProgressBar;

	if(`progressBar -query -isCancelled $gMainProgressBar`) {
		print ("maya2glTF: aborting at "+`date -time`+"\n");
        return -1;
	}

	return 0;
}

global proc maya2glTF_UI()
{
	global string $maya2glTF_global_export_dir;

    // This is defined on maya startup
	global string $gMainProgressBar;  

    // This is auto-updated by msbuild 
	string $maya2glTF_version = "v0.9.2-beta ae735cc";

	if (`window -exists maya2glTF_exporter_window`)
		deleteUI maya2glTF_exporter_window;

    // Setup export directory
	string $exportDir = $maya2glTF_global_export_dir;
	
	if( $exportDir == "" )
	{
		string $scenePath = `file -q -loc`;
		string $sceneDir = dirname($scenePath);
		$exportDir = _terminateWithSlash($sceneDir)+"export/";
	}
	
	$exportDir = fromNativePath($exportDir);
	
	string $sceneName = basenameEx(`file -q -sceneName -shortName`);

    string $year = `date -format "YYYY"`;

	window -title ("maya2glTF") maya2glTF_exporter_window;

    frameLayout -mw 30 -mh 30 ("copyright (C)" + $year + " wondermedia.tv         version " + $maya2glTF_version);

	columnLayout -adjustableColumn true -rowSpacing 10; 

	string $copyright = "anonymous " + $year;

	float $scale = 1;

	string $folderFLD = `textFieldGrp -fileName $exportDir -label "output folder:" -adjustableColumn 2`;
	string $copyrightFLD = `textFieldGrp -text $copyright -label "copyright:" -adjustableColumn 2`;
	string $sceneNameFLD = `textFieldGrp -text $sceneName -label "scene name:" -adjustableColumn 2`;
	string $scaleFLD = `floatFieldGrp -value1 1 -label "scale factor:"`;

    string $fields[] = {};
    $fields[size($fields)] = _quoted($copyrightFLD);
    $fields[size($fields)] = _quoted($folderFLD);
    $fields[size($fields)] = _quoted($sceneNameFLD);
    $fields[size($fields)] = _quoted($scaleFLD);
	
    string $cmd = "maya2glTF_onExport(" + stringArrayToString($fields, ", ") + ");";

	button -label "assign PBR shader to selection" -command "maya2glTF_assignPbrShader();";
	button -label "select all polygon meshes" -command "maya2glTF_polySelectAndFrame();";
	button -label "export selected meshes" -command ($cmd);
	
	showWindow maya2glTF_exporter_window;
}

// test
